//2261. K Divisible Elements Subarrays




class Solution {

    public int countDistinct(int[] nums, int k, int p) {
        Set<String> set = new HashSet<>();
        for (int i = 0; i < nums.length; i++) {
            int count = 0;
            StringBuilder sb = new StringBuilder();
            for (int j = i; j < nums.length; j++) {
                if (nums[j] % p == 0) count++;
                if (count <= k) {
                    sb.append(nums[j]).append(".");
                    set.add(sb.toString());
                } else break;
            }
        }
        return set.size();
    }

    public static void main(String[] args) {
        assert new Solution().countDistinct(new int[]{2,3,3,2,2}, 2, 2) == 11;
        assert new Solution().countDistinct(new int[]{1,2,3,4}, 4, 1) == 10;
    }

}
